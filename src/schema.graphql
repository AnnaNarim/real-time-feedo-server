type Query {
  feed: [Post!]!
  drafts: [Post!]!
  post(id: ID!): Post
  class(id: ID!): Class
  me: User
  classes: [Class!]
  fields: [Field!]!
  answers: [Answer!]
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!

  createDraft(title: String!, content: String!,anonymous:Boolean! answerType: String!, fields:[inputField!]!): Post!
  updateDraft(id: ID!, title: String!, content: String!): Post!
  publish(id: ID!,published:Boolean!): Post!
  deletePost(id: ID!): Post!

  createClass(name: String!, postId: ID!): Class!
  publishClass(id: ID!, published: Boolean!): Class!
  deleteClass(id: ID!): Class!

  createAnswer(value: String!, classId: ID!): Answer!
}

type Subscription {
  feedSubscription: Post
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  name: String!
  posts: [Post!]!
}

type Post {
  id: ID!
  published: Boolean!
  anonymous: Boolean!
  title: String!
  content: String!
  answerType : String!
  author: User!
  fields: [Field!]!
  classes: [Class!]
}

input inputField{
  label:String!,
  type:String!
}

type Field {
  id:ID!
  label:String!,
  type:String!,
}

type Class {
  id: ID!
  name: String!
  post: Post!
  published: Boolean!
  answers: [Answer!]
}

type Answer {
  id: ID!
  value: String!
  class: Class!
}
